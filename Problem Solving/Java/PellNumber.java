/*
Pell numbers are numbers that are similar to the Fibonacci numbers and are generated by below formula
Pn = 2*Pn-1 + Pn-2
with seeds P0 = 0 and P1 = 1
Your task is to print Nth pell number.

 

Example 1:

Input:
N = 3
Output:
5
Explanation:
P0 = 0, P1 = 1, P2 = 2*1+0 = 2,
P3 = 2*2+1 = 5
Example 2:

Input:
N = 4
Output:
12
Explanation:
P0 = 0, P1 = 1, P2 = 2*1+0 = 2,
P3 = 2*2+1 = 5, P4 = 2*5+2 = 12
 

Your Task:
You don't need to read input or print anything. Your task is to complete the function getNthPell() which takes an Integer N as input and returns the answer modulo (109+7).

 

Expected Time Complexity: O(N)
Expected Auxiliary Space: O(N)

 

Constraints:
1 <= N <= 105
*/

//{ Driver Code Starts

import java.io.*;
import java.util.*;

class GFG {
    public static void main(String args[]) throws IOException {
        BufferedReader read =
            new BufferedReader(new InputStreamReader(System.in));
        int t = Integer.parseInt(read.readLine());
        while (t-- > 0) {
            int N = Integer.parseInt(read.readLine());

            Solution ob = new Solution();
            System.out.println(ob.getNthPell(N));
        }
    }
}
// } Driver Code Ends



class Solution {
    static Long getNthPell(int N) {
        // code here
        long p0=0, p1=1, mod=1000000007;
        
        for(int i=2; i<=N; i++){
            long temp=(2*p1+p0)%mod;
            p0=p1;
            p1=temp;
        }
        return p1%mod;
    }
};
