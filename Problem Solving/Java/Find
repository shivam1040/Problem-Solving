/*
Given two values ‘a’ and ‘b’ that represent coefficients in “ax – by = 0”, find the smallest values of x and y that satisfy the equation. It may also be assumed that x > 0, y > 0, a > 0 and b > 0.

Example 1:

Input: a = 25, b = 35
Output: 7 5
Explaination: 25*7 - 35*5 = 0. And x = 7 
and y = 5 are the least possible values 
of x and y to get the equation solved.
Example 2:

Input: a = 3, b = 7
Output: 7 3
Explaination: For this case x = 7 and 
y = 3 are the least values of x and y 
to satisfy the equation.
Your Task:
You do not need to read input or print anything. Your task is to complete the function findXY() which takes a and b as input parameters and returns the least possible values of x and y to satisfy the equation.

Expected Time Complexity: O(log(max(a, b)))
Expected Auxiliary Space: O(1)

Constraints:
1 ≤ a, b ≤ 104
*/

/*
Since ax - by = 0,
ax = by, which means x/y = b/a
So we can calculate gcd and directly do as -

Value of x = b / gcd;
Value of y = a / gcd;

A Direct Solution is to use Least Common Multiple (LCM). LCM of ‘a’ and ‘b’ represents the smallest value that can make both sides equal. We can find LCM using below formula. 
*/

//{ Driver Code Starts
//Initial Template for Java

import java.io.*;
import java.util.*;
import java.lang.*;

class GFG{
    public static void main(String args[])throws IOException
    {
        BufferedReader in = new BufferedReader(new InputStreamReader(System.in));
        int t = Integer.parseInt(in.readLine());
        while(t-- > 0){
            String arr[] = in.readLine().trim().split("\\s+");
            int a = Integer.parseInt(arr[0]);
            int b = Integer.parseInt(arr[1]);
            
            Solution ob = new Solution();
            List<Integer> ans = new ArrayList<Integer>();
            ans = ob.findXY(a, b);
            System.out.println(ans.get(0) + " " + ans.get(1));
        }
    }
}
// } Driver Code Ends


//User function Template for Java

class Solution{
    static List<Integer> findXY(int a, int b)
    {
        // code here
        int gcd=gcd(a, b);
        List<Integer> res=new ArrayList<>();
        
        res.add(b/gcd);
        res.add(a/gcd);
        return res;
    }
    
    private static int gcd(int a, int b)
    {
 
        // Everything divides 0
        if (a == 0)
            return b;
        if (b == 0)
            return a;
 
        // base case
        if (a == b)
            return a;
 
        // a is greater
        if (a > b)
            return gcd(a - b, b);
 
        return gcd(a, b - a);
    }
}
